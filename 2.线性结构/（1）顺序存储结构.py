'''多项式的表达方法'''
import numpy as np

'''顺序存储结构直接表示'''
# f(x)=4x^5 - 3x^2 +1
def duoxiangshi1():
    a1 = [1, 0, -3, 0, 0, 4]  # 用数组存系数
    a2 = [2, 4, -4, 1, 9, 0]
    # ...
    f = 0
    x = 10  # 随便赋的值啊
    for i in range(len(a1)):
        f += a1[i]*(x**i)     # 数组下标刚好是x的次数

# 加法运算：直接矩阵元素对应相加即可

# 问题： f(x)=x + 3x^2000，这种咋办？中间2000个0，浪费空间啊？？

'''顺序存储结构表示非0项'''
# p1(x)=9x^12 + 15x^8 + 3x^2  和  p2(x)=26x^19 - 4x^8 - 13x^6 + 82
def duoxiangshi2():
    a1 = np.array([(9, 15, 3),(12, 8, 2)])   # 按指数从大到小顺序存放，2*n的数组
    a2 = np.array([(26, -4, -13, 82),(19, 8, 6, 0)])
    # 加法运算如下：
    # 从头比较，指数大的直接算作一项，指数小的接着和后面比，指数一样就把系数加到一起算作一项

    print(a1,'\n',a2)
