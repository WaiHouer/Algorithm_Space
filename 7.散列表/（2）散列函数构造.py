'''数字关键词的散列函数构造方法'''

'''
（1）直接定址法：线性函数--h(key) = a * key + b
例如：年份从1990-2021

（2）除留余数法：h(key) = key % p（常用）
例如：p取一个素数

（3）数字分析法：分析数字关键字在各位上的变化情况，取比较随机的位，作为散列地址
             h(key) = atoi(key +7)
例如：手机号后四位
     身份证号中的第6、10、14、16、17位
     
（4）折叠法：把关键词分割成位数相同的几部分，叠加
例如：56793542，分割成542、793、056，叠加=1391，取391

（5）平方取中法：目的是想让最终结果，受到更多位数上数字的影响
例如：56793542，平方=3225506412905764，取中间641
'''

'''字符关键词的散列函数构造方法'''

'''
（1）简单的-ASCII码加和法：h(key) = (∑key[i]) % table_size
    冲突严重、需要的空间非常大

（2）简单的改进-前三位字符移位法：h(key) = (key[0] * 27^2 + key[1] * 27 + key[2]) % table_size
仍然有冲突、空间浪费约30%

（3）好的散列函数-移位法：涉及所有N个字符，且分布得很好
                     h(key)(i从0到n-1) = (∑key[n-1 - i] * 32^i) % table_size
例如：h('abcde') = 'a'*32^4 + 'b'*32^3 +.....
     实际上不需要非得乘以32，字符左移5位，即为32倍
     h=0
     while key 不为空:
        h=(h<<5,左移5位)+key
        key ++
     return h % table_size
'''
